{
  "openapi": "3.0.3",
  "info": {
    "title": "TaskFlow API",
    "description": "A secure and scalable task management API for managing tasks and categories.",
    "contact": {
      "email": "support@taskflow.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0"
  },
  "externalDocs": {
    "description": "TaskFlow Documentation",
    "url": "http://taskflow.com/docs"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "User authentication operations (Form-based)"
    },
    {
      "name": "API Auth",
      "description": "JWT-based authentication for API clients"
    },
    {
      "name": "Tasks",
      "description": "Task management operations"
    },
    {
      "name": "API Tasks",
      "description": "RESTful API for task management"
    },
    {
      "name": "Categories",
      "description": "Category management operations"
    },
    {
      "name": "API Categories",
      "description": "RESTful API for category management"
    },
    {
      "name": "System",
      "description": "System-level endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Display registration form",
        "operationId": "getRegisterForm",
        "responses": {
          "200": {
            "description": "Registration form displayed successfully"
          }
        }
      },
      "post": {
        "tags": ["Authorization"],
        "summary": "Register a new user (Web UI)",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User Registration",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input or user already registered"
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Display login form",
        "operationId": "getLoginForm",
        "responses": {
          "200": {
            "description": "Login form displayed successfully"
          }
        }
      },
      "post": {
        "tags": ["Authorization"],
        "summary": "Login a valid user (Web UI)",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User Login",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Invalid user credentials. Please try again"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Logout the current user (Web UI)",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["API Auth"],
        "summary": "Register a new user via API",
        "operationId": "apiRegisterUser",
        "requestBody": {
          "description": "User Registration details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserApiRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["API Auth"],
        "summary": "Login and get JWT token",
        "operationId": "apiLoginUser",
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginApiRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful, JWT token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": ["API Auth"],
        "summary": "Refresh JWT token",
        "operationId": "refreshToken",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user": {
      "get": {
        "tags": ["API Auth"],
        "summary": "Get current user info",
        "operationId": "getUserInfo",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "tags": ["API Auth"],
        "summary": "Change user password",
        "operationId": "changePassword",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Password change details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect current password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks (Web UI)",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "List of tasks displayed successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/tasks/dashboard": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Display task dashboard (Web UI)",
        "operationId": "getDashboard",
        "responses": {
          "200": {
            "description": "Dashboard displayed successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/tasks/add_task": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Display task creation form",
        "operationId": "getAddTaskForm",
        "responses": {
          "200": {
            "description": "Task form displayed successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Add a new task (Web UI)",
        "operationId": "addTask",
        "requestBody": {
          "description": "Create a new task",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Task added successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/tasks/edit_task/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Display task edit form",
        "operationId": "getEditTaskForm",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edit form displayed successfully"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Edit an existing task (Web UI)",
        "operationId": "editTask",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Edit an existing task",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "400": {
            "description": "Error editing task"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/tasks/delete_task/{taskId}": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Delete an existing task (Web UI)",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique Task Id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "400": {
            "description": "Error deleting task"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["API Tasks"],
        "summary": "Get all tasks",
        "operationId": "apiGetTasks",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by task status",
            "schema": {
              "type": "string",
              "enum": ["pending", "in-progress", "completed"]
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "Filter by category ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Filter by priority",
            "schema": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["API Tasks"],
        "summary": "Create a new task",
        "operationId": "apiCreateTask",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Task details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{taskId}": {
      "get": {
        "tags": ["API Tasks"],
        "summary": "Get task by ID",
        "operationId": "apiGetTask",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["API Tasks"],
        "summary": "Update task",
        "operationId": "apiUpdateTask",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated task details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["API Tasks"],
        "summary": "Delete task",
        "operationId": "apiDeleteTask",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["API Categories"],
        "summary": "Get all categories",
        "operationId": "apiGetCategories",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["API Categories"],
        "summary": "Create a new category",
        "operationId": "apiCreateCategory",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Category details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{categoryId}": {
      "get": {
        "tags": ["API Categories"],
        "summary": "Get category by ID",
        "operationId": "apiGetCategory",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["API Categories"],
        "summary": "Update category",
        "operationId": "apiUpdateCategory",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated category details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["API Categories"],
        "summary": "Delete category",
        "operationId": "apiDeleteCategory",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete default category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "System health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "password", "email_id"],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "s3cureP@ssw0rd"
          },
          "email_id": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          }
        }
      },
      "Login": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "s3cureP@ssw0rd"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": ["title", "description", "due_date", "priority"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Complete project proposal"
          },
          "description": {
            "type": "string",
            "example": "Write a detailed proposal for the new client project"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-15T14:00:00Z"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "example": "high"
          },
          "category_id": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "UserApiRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "s3cureP@ssw0rd"
          }
        }
      },
      "LoginApiRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "s3cureP@ssw0rd"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-19T14:32:15Z"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 42
              },
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "role": {
                "type": "string",
                "example": "user"
              }
            }
          }
        }
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-19T14:32:15Z"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-01T10:30:00Z"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-18T09:15:22Z"
          }
        }
      },
      "PasswordChangeRequest": {
        "type": "object",
        "required": ["current_password", "new_password"],
        "properties": {
          "current_password": {
            "type": "string",
            "format": "password",
            "example": "oldP@ssword123"
          },
          "new_password": {
            "type": "string",
            "format": "password",
            "example": "newS3cureP@ss!"
          }
        }
      },
      "TaskRequest": {
        "type": "object",
        "required": ["title", "description"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Complete project proposal"
          },
          "description": {
            "type": "string",
            "example": "Write a detailed proposal for the new client project"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "in-progress", "completed"],
            "default": "pending",
            "example": "pending"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "default": "medium",
            "example": "high"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-15T14:00:00Z"
          },
          "category_id": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123
          },
          "title": {
            "type": "string",
            "example": "Complete project proposal"
          },
          "description": {
            "type": "string",
            "example": "Write a detailed proposal for the new client project"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "priority": {
            "type": "string",
            "example": "high"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-15T14:00:00Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-18T09:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-18T10:15:00Z"
          },
          "user_id": {
            "type": "integer",
            "example": 42
          },
          "category_id": {
            "type": "integer",
            "example": 1
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Work"
              },
              "color": {
                "type": "string",
                "example": "#e74c3c"
              }
            }
          }
        }
      },
      "TaskListResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResponse"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 42
              },
              "page": {
                "type": "integer",
                "example": 1
              },
              "per_page": {
                "type": "integer",
                "example": 20
              },
              "pages": {
                "type": "integer",
                "example": 3
              },
              "has_next": {
                "type": "boolean",
                "example": true
              },
              "has_prev": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "CategoryRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Work"
          },
          "description": {
            "type": "string",
            "example": "Work-related tasks"
          },
          "color": {
            "type": "string",
            "example": "#e74c3c"
          },
          "icon": {
            "type": "string",
            "example": "briefcase"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Work"
          },
          "description": {
            "type": "string",
            "example": "Work-related tasks"
          },
          "color": {
            "type": "string",
            "example": "#e74c3c"
          },
          "icon": {
            "type": "string",
            "example": "briefcase"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-01T10:30:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-01T10:30:00Z"
          },
          "user_id": {
            "type": "integer",
            "example": 42
          },
          "task_count": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "CategoryListResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResponse"
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "An error occurred"
          },
          "details": {
            "type": "string",
            "example": "Detailed error description"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-18T12:34:56Z"
          },
          "services": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "example": "healthy"
              },
              "redis": {
                "type": "string",
                "example": "healthy"
              }
            }
          }
        }
      }
    }
  }
}